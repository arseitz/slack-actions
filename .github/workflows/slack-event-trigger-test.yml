name: Slack Event Trigger Test

on:
  repository_dispatch:
    types:
      - event-trigger

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  SLACK_CHANNEL: "C03LF4N5WES"
  CLIENT-PAYLOAD: ${{ github.event.client_payload }}
  PAYLOAD-CHALLENGE: ""
  
jobs:
  check-events:
    name: "Check Events"
    runs-on: ubuntu-latest
    outputs:
      determine-event-result: ${{ steps.determine-event.outputs.result }}
    steps:
      - id: determine-event
        name: "Determine Event Type"
        run: |
          import os
          payload=os.environ['CLIENT_PAYLOAD']
          print payload
          if payload.get('type', '') == 'url_verification':
            print(f"Returning Challenge value payload['challenge']...")
            result="success"
            os.environ['CLIENT_PAYLOAD']=payload['challenge']
          print("no matching event")
          result="failure"
        shell: python
  send-notification:
    name: "Send Slack Notification"
    runs-on: ubuntu-latest
    steps:
      - name: slack - GitHub Actions Slack integration
        uses: act10ns/slack@46098c76608e7ab2e5c784a0e93fd44065b20ab3
        with:
            status: "Sending" # ${{ job.status }} # or a string such as `in-process`
            channel: SLACK_CHANNEL
            message: "${{needs.determine-event.outputs.determine-event-result}}"
        if: always()  # <<<< ALWAYS RUN THIS STEP EVEN IF PREVIOUS STEPS FAILED
